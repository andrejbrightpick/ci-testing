name: Release Workflow

on:
  push:
    branches:
      - 'release/*'



jobs:
  check-release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        show-progress: true


    - name: Check if release branch is on the same commit as origin/main
      id: check_same_commit
      run: |
        RELEASE_BRANCH=${{ github.ref }}
        MAIN_COMMIT=$(git rev-parse origin/main)
        RELEASE_COMMIT=$(git rev-parse $RELEASE_BRANCH)

        echo "main_commit=$MAIN_COMMIT" >> $GITHUB_ENV
        echo "release_commit=$RELEASE_COMMIT" >> $GITHUB_ENV

        if [ "$MAIN_COMMIT" = "$RELEASE_COMMIT" ]; then
          echo "same_commit=true" >> $GITHUB_ENV
        else
          echo "same_commit=false" >> $GITHUB_ENV
        fi

    - name: Rename Jira release runner
      if: env.same_commit == 'true'
      run: |
        # Add your logic to rename the Jira release runner here
        echo "Renaming Jira release runner"
        # This can be done via a script or API call to Jira

    - name: Fast-forward main to release branch
      if: env.same_commit == 'false'
      run: |
        RELEASE_BRANCH=${{ github.ref }}
        CURRENT_MAIN_COMMIT=$(git rev-parse origin/main)
        MERGE_BASE=$(git merge-base origin/main $RELEASE_BRANCH)
      
        if [ "$CURRENT_MAIN_COMMIT" = "$MERGE_BASE" ]; then
            echo "The release branch $RELEASE_BRANCH has been rebased onto the main branch. Fast forward main to $RELEASE_BRANCH"
            git checkout main
            git merge --ff-only $RELEASE_BRANCH
            git push origin main
        else
            echo "The release branch ${{ github.ref }} has not been rebased onto the main branch. Do nothing."
        fi
