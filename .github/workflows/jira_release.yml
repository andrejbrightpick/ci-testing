name: Release Workflow

on:
  push:
    branches:
      - 'release/*'


jobs:
  check-release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        show-progress: true


    - name: Check if release branch is on the same commit as origin/main
      id: check_same_commit
      run: |
        RELEASE_BRANCH=${{ github.ref }}
        MAIN_COMMIT=$(git rev-parse origin/main)
        RELEASE_COMMIT=$(git rev-parse $RELEASE_BRANCH)

        echo "main_commit=$MAIN_COMMIT" >> $GITHUB_ENV
        echo "release_commit=$RELEASE_COMMIT" >> $GITHUB_ENV

        if [ "$MAIN_COMMIT" = "$RELEASE_COMMIT" ]; then
          echo "same_commit=true" >> $GITHUB_ENV
        else
          echo "same_commit=false" >> $GITHUB_ENV
        fi
        
    - name: Install Nix
      uses: cachix/install-nix-action@v18
      with:
        extra_nix_config: |
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

    - name: Set next release
      if: env.same_commit == 'true'
      uses: workflow/nix-shell-action@v3.3.0
      env:
        JIRA_API_TOKEN: ${{ secrets.JIRA_TOKEN }}
      with:
        packages: "jq"
        script: |
          JIRA_PROJECT_KEY="RUN"
          JIRA_NEXT_VERSION="Test next version"
          RELEASE_VERSION=$(echo "${{ github.ref }}" | sed -n 's|^refs/heads/release/||p')
          JIRA_VERSION="Test $RELEASE_VERSION next version"
          
          # Get id of Jira release
          JIRA_RELEASE_ID=$(\
          curl \
          --request GET \
          --header 'Accept: application/json' \
          --url 'https://photoneo.atlassian.net/rest/api/3/project/$JIRA_PROJECT_KEY/versions' \
          --user 'ra-github-actions-bot@brightpick.ai:$JIRA_API_TOKEN' | jq '.[] | select(.name == "$JIRA_NEXT_VERSION") | .id | tonumber') 
          
          if [[ $JIRA_RELEASE_ID ]]; then
            echo "Renaming release version to $JIRA_VERSION"
            
            curl --request PUT \  
              --url 'https://photoneo.atlassian.net/rest/api/3/version/$JIRA_RELEASE_ID' \
              --user 'ra-github-actions-bot@brightpick.ai:$JIRA_API_TOKEN' \
              --header 'Accept: application/json'   
              --header 'Content-Type: application/json' \
              --data '{"name": "Test $JIRA_VERSION next version"}'

          else
            echo "Jira release $JIRA_NEXT_VERSION doesn't exist."
            echo "Creating release $JIRA_NEXT_VERSION."
          
            curl --request POST \
              --url 'https://photoneo.atlassian.net/rest/api/3/version/$JIRA_RELEASE_ID' \
              --user 'ra-github-actions-bot@brightpick.ai:${{ secrets.JIRA_TOKEN }}' \
              --header 'Accept: application/json'   
              --header 'Content-Type: application/json' \
              --data '{
              "name": "$JIRA_NEXT_VERSION",
              "project": $JIRA_PROJECT_KEY,
              "released": false
          }'
          fi
            

    - name: Fast-forward main to release branch
      if: env.same_commit == 'false'
      run: |
        RELEASE_BRANCH=${{ github.ref }}
        CURRENT_MAIN_COMMIT=$(git rev-parse origin/main)
        MERGE_BASE=$(git merge-base origin/main $RELEASE_BRANCH)
      
        if [ "$CURRENT_MAIN_COMMIT" = "$MERGE_BASE" ]; then
            echo "The release branch $RELEASE_BRANCH has been rebased onto the main branch. Fast forward main to $RELEASE_BRANCH"
            git checkout main
            git merge --ff-only $RELEASE_BRANCH
            git push origin main
        else
            echo "The release branch ${{ github.ref }} has not been rebased onto the main branch. Do nothing"
        fi
